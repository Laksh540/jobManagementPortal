{"version":3,"sources":["components/Main/Main.module.css","components/JobForm/AddJob.module.css","components/ApplicantForm/ApplicantForm.module.css","components/JobForm/AddJob.js","components/ApplicantForm/ApplicantForm.js","components/JobsCreated/ListJobs.js","components/JobsCreated/JobsCreated.js","components/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AddJob","props","useState","jobName","setJobName","jobDescription","setJobDescription","technologies","settechnologies","Fragment","className","classes","form_wrap","onSubmit","event","preventDefault","newJobPost","name","description","technology","id","Math","floor","random","addnewJob","htmlFor","type","placeholder","onChange","target","value","console","log","cancelbtn","onClick","hideForm","ApplicantForm","ListJobs","scope","JobsCreated","lsItem","length","map","job","Main","showAddJobForm","setFormToggle","showApplicantForm","setShowApplicantForm","newJob","setNewJob","useEffect","JSON","parse","localStorage","getItem","main_container","nav","navtags","item","previousItem","window","setItem","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59962faf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Main_main_container__1w0gp\",\"nav\":\"Main_nav__2NtwA\",\"navtags\":\"Main_navtags__14TUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrap\":\"AddJob_form_wrap__3JR5e\",\"cancelbtn\":\"AddJob_cancelbtn__3kru2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrap\":\"ApplicantForm_form_wrap__3pxFZ\",\"cancelbtn\":\"ApplicantForm_cancelbtn__1fsyw\"};","import react, { useState } from \"react\";\r\nimport classes from \"./AddJob.module.css\";\r\n\r\nconst AddJob=(props)=>{\r\n    const [jobName,setJobName]=useState(\"\");\r\n    const [jobDescription,setJobDescription]=useState(\"\");\r\n    const [technologies,settechnologies]=useState(\"\");\r\n    const cancelButtonClickHandler=()=>{\r\n        props.hideForm();\r\n    }\r\n    const nameChangeHandler=(event)=>{\r\n        setJobName(event.target.value);\r\n       // console.log(jobName);\r\n    }\r\n    const DescriptionChangeHandler=(event)=>{\r\n        setJobDescription(event.target.value);\r\n        console.log(jobDescription);\r\n    }\r\n    const technologiesChangeHandler=(event)=>{\r\n        settechnologies(event.target.value);\r\n        console.log(technologies);\r\n    }\r\n    const submitHandler=(event)=>{\r\n        //alert(\"hello\")\r\n        event.preventDefault();\r\n        const newJobPost={\r\n            name:jobName,\r\n            description:jobDescription,\r\n            technology:technologies,\r\n            id:\"JB\"+Math.floor(Math.random()*1000000)\r\n        }\r\n        //console.log(newJobPost);\r\n        setJobName(\"\");\r\n        setJobDescription(\"\");\r\n        settechnologies(\"\");\r\n        props.addnewJob(newJobPost);\r\n    }\r\n\r\n    return(\r\n        <react.Fragment>\r\n            <div className={classes.form_wrap}>\r\n                <form  onSubmit={submitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"name\"  placeholder=\"Enter Name\"\r\n                            onChange={nameChangeHandler}\r\n                            value={jobName}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"description\" placeholder=\"description\"\r\n                            onChange={DescriptionChangeHandler}\r\n                            value={jobDescription}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"technologies\">Technologies</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"technologies\" placeholder=\"technologies\"\r\n                            onChange={technologiesChangeHandler}\r\n                            value={technologies}/>\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" className=\" btn btn-primary\">Submit</button>\r\n                    \r\n                    <button type=\"submit\" className={classes.cancelbtn+\" btn btn-danger\"}\r\n                        onClick={cancelButtonClickHandler}\r\n                    >Cancel</button>\r\n                </form>\r\n            </div>\r\n        </react.Fragment>\r\n    )\r\n}\r\nexport default AddJob;","import classes from \"./ApplicantForm.module.css\"\r\n\r\nconst ApplicantForm=()=>{\r\n    return(\r\n        <div className={classes.form_wrap}>\r\n                <form >\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"JobCode\">Job Code</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"JobCode\"  placeholder=\"Job Code\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Name\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"notes\">Notes</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"notes\" placeholder=\"Notes\"\r\n                           />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"technologies\">Technologies</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"technologies\" placeholder=\"Technologies\"\r\n                           />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"noticePeriod\">Notice Period</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"noticePeriod\" placeholder=\"Notice Period\"\r\n                           />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"salaryAsked\">Salary Asked</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"salaryAsked\" placeholder=\"Salary Asked\"\r\n                           />\r\n                    </div>\r\n                    <button type=\"submit\" className=\" btn btn-primary\">Submit</button>\r\n                    \r\n                    <button type=\"submit\" className={classes.cancelbtn+\" btn btn-danger\"}\r\n                        \r\n                    >Cancel</button>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\nexport default ApplicantForm;","import { useState } from \"react\";\r\nimport classes from \"./ListJobs.module.css\";\r\n\r\nconst ListJobs =(props)=>{\r\n    \r\n    return(\r\n    <tr>\r\n        <th scope=\"row\">{props.id}</th>\r\n        <td>{props.name}</td>\r\n        <td>{props.description}</td>\r\n        <td>{props.technology}</td>\r\n        \r\n    </tr>\r\n    \r\n    )   \r\n    \r\n}\r\nexport default ListJobs;","import classes from \"./JobsCreated.module.css\"\r\nimport ListJobs from \"./ListJobs\";\r\n\r\nconst JobsCreated=(props)=>{\r\n    console.log(props.lsItem);\r\n    if(props.lsItem ==null){\r\n        props.lsItem =[]; \r\n    }\r\n    return(\r\n        <div>\r\n            <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Job Code</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Technologies</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                           \r\n                            { props.lsItem.length >0 && \r\n                                     props.lsItem.map((job) => (\r\n                                    <ListJobs\r\n                                        key={job.id}\r\n                                        id={job.id}\r\n                                        name={job.name}\r\n                                        description={job.description}\r\n                                        technology={job.technology}\r\n                                    ></ListJobs>\r\n                                    )\r\n                                    )}\r\n                             { props.lsItem.length === 0 &&\r\n                                   <tr>\r\n                                        <th scope=\"row\">---</th>\r\n                                        <td>---</td>\r\n                                        <td>---</td>\r\n                                        <td>---</td>\r\n                                        \r\n                                   </tr>   }        \r\n                        {/* <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Jacob</td>\r\n                        <td>Thornton</td>\r\n                        <td>@fat</td>\r\n                        </tr>\r\n                        <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Larry</td>\r\n                        <td>the Bird</td>\r\n                        <td>@twitter</td>\r\n                        </tr> */}\r\n                    </tbody>\r\n           </table>\r\n        </div>\r\n    )\r\n}\r\nexport default JobsCreated;","import { useEffect, useState } from \"react\";\r\nimport ApplicantForm from \"../ApplicantForm/ApplicantForm\";\r\nimport AddJob from \"../JobForm/AddJob\";\r\nimport JobsCreated from \"../JobsCreated/JobsCreated\";\r\n\r\nimport classes from \"./Main.module.css\";\r\n\r\nconst Main=(props)=>{\r\n    const[showAddJobForm,setFormToggle] = useState(false);\r\n    const[showApplicantForm,setShowApplicantForm]=useState(false);\r\n    //const[isEmpty,setIsEmpty] =useState(true);\r\n    const[newJob,setNewJob]=useState(\"\");\r\n    //console.log(props.lsItem);\r\n    \r\n    // console.log(props.lsItem);\r\n    \r\n    \r\n    const showFormHandler =()=>{\r\n        \r\n            setFormToggle(true);\r\n       \r\n       // props.toggleForm(showAddJobForm);\r\n    }\r\n    const hideAddJobFormHandler =()=>{\r\n            setFormToggle(false);\r\n    }\r\n    const NewJobHandler=(item)=>{\r\n        setNewJob((previousItem)=>{return [item,...previousItem]});\r\n        console.log(newJob);\r\n        window.localStorage.setItem(\"currentJobs\",JSON.stringify(newJob));\r\n         \r\n    }\r\n    const showApplicantFormHandler=()=>{\r\n            setShowApplicantForm(true);\r\n    }\r\n    const showJobListHandler=()=>{\r\n        setShowApplicantForm(false);\r\n}\r\n    useEffect(() =>{\r\n         if(JSON.parse(localStorage.getItem('currentJobs')) != null){\r\n            setNewJob(JSON.parse(localStorage.getItem('currentJobs')));\r\n         }\r\n       \r\n        \r\n    }, []);\r\n    return (\r\n        <div className={classes.main_container}>\r\n            <div className={classes.nav}>\r\n                <div className=\"col-lg-6\">\r\n                    <h3>Jobs</h3>\r\n                    <p><span>Dashboard</span>/Jobs</p>\r\n                </div>\r\n                <div className={classes.navtags+\" col-lg-6\"}>\r\n                    <input type=\"button\" value=\"Add Job\"\r\n                            onClick={showFormHandler}\r\n                            />\r\n                    <input type=\"button\" value=\"Fill an Applicant\"\r\n                            onClick={showApplicantFormHandler}\r\n                            /> \r\n                    <input type=\"button\" value=\"Current Openings\"\r\n                            onClick={showJobListHandler}\r\n                            />                \r\n                </div>\r\n                \r\n            </div>\r\n            <div>\r\n                {showAddJobForm && <AddJob hideForm={hideAddJobFormHandler}\r\n                    addnewJob={NewJobHandler}></AddJob>}\r\n            </div>\r\n            <div>\r\n                {!showApplicantForm && <JobsCreated lsItem={newJob}></JobsCreated>}\r\n                {showApplicantForm && <ApplicantForm></ApplicantForm>}\r\n               {/* {props.lsItem.map((job) =>\r\n                  <div>\r\n                    <p>{job.id}</p>\r\n                    <p>{job.name}</p>\r\n                    <p>{job.discription}</p>\r\n                    <p>{job.technology}</p>\r\n                  </div>\r\n                 )} */}\r\n                {/* <TestOne lsItem={props.lsItem}></TestOne> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Main;","\nimport { useState } from 'react';\nimport './App.css';\nimport AddJob from './components/JobForm/AddJob';\nimport Main from './components/Main/Main';\nfunction App() {\n    //const [displayForm,setShowForm] =useState(false);\n   // const showFormchangeHandler=(flag)=>{\n     //   setShowForm(flag);\n   // }\n    \n    //  const someJobs =[\n    //     {\n    //        name:\"laksh\",\n    //        discription:\"good\",\n    //        technology:\"css\",\n    //        id:1         \n    //     },\n    //     {\n    //         name:\"kunal\",\n    //         discription:\"fine\",\n    //         technology:\"html\",\n    //         id:2          \n    //      },\n    //      {\n    //         name:\"vaishnav\",\n    //         discription:\"better\",\n    //         technology:\"js\",\n    //         id:3          \n    //      },\n    //      {\n    //         name:\"manish\",\n    //         discription:\"chor\",\n    //         technology:\"copy\",\n    //         id:4          \n    //      },\n    //      {\n    //         name:\"veyon\",\n    //         discription:\"sad\",\n    //         technology:\"coral\",         \n    //         id:5 \n    //      }\n    // ];\n    \n  //console.log(doubled);\n  return (\n    <div className=\"main\" >\n        <div className=\"heading\">\n          <h2>Hr Job Management Portal</h2>\n        </div>\n        <Main ></Main>\n        \n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}